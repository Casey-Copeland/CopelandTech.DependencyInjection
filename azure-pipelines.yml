trigger:
- release/*
- master
- develop
- feature/*

resources:
- repo: self

pool:
  vmImage: 'ubuntu-latest'

variables:
  BuildConfiguration: 'Release'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'core'
    configFilePath: 'gitversion.yml'
    preferBundledVersion: false
- task: UseDotNet@2
  displayName: '.NET Core 3.1.x'
  inputs:
    version: '3.1.x'
    packageType: sdk
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(GitVersion.NuGetVersion)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/CopelandTech.*.UnitTests.csproj'
- task: DotNetCoreCLI@2
  condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/develop', 'refs/heads/release/v0.5'))
  displayName: 'NuGet pack'
  inputs: 
    command: 'pack'
    packagesToPack: 'src/**/*.csproj'
    nobuild: true
    versioningScheme: byEnvVar
    versionEnvVar: GitVersion.NuGetVersion
- task: NuGetCommand@2
  displayName: 'Push to NuGet.org'
  condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/develop', 'refs/heads/release/v0.5'))
  inputs:
    command: push
    nugetFeedType: external
    publishFeedCredentials: 'CopelandTech.Nuget'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'